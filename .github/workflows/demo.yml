name: Deploy website  # Specifies the name of the workflow

on:  # Specifies the events that trigger the workflow 
  workflow_dispatch:  # Allows you to manually trigger the workflow from the GitHub Actions interface.
  push:  # Triggers the workflow on a push event, specifically to the master branch
    branches: 
      - master

jobs:  # Contains the individual jobs that run as part of the workflow.

  test:  # The name of the first job, which runs tests on the code
    runs-on: ubuntu-latest  # Specifies the environment to run the job on, in this case, ubuntu-latest.
    steps:  # The series of steps to execute in this job
      - name: Get code
        uses: actions/checkout@v4  # Action to check out the repository code.
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json')}}
      - name: Install dependencies  # To install dependencies defined in package-lock.json.
        run: npm ci
      - name: Lint code  # Runs npm run lint to lint the code.
        run: npm run lint
      - name: Test  # Runs npm run test.
        run: npm run test

  build:  # The name of the second job, which builds the website
    needs: test  # Specifies that this job depends on the completion of the 'test' job
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}  # Output defined here
    steps:
      - name: Get code  # Action to check out the repository code.
        uses: actions/checkout@v4
      - name: Cache dependencies  # Caches npm dependencies to speed up the build process.
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json')}}
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Publish JS filename  # Captures the JS filename for later use.
        id: publish
        run: echo "script-file=$(find dist/assets/*.js -type f)" >> $GITHUB_ENV
      - name: Upload artifacts  # Uploads the build artifacts.
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist

  deploy:  # The name of the third job, which deploys the website
    needs: build  # Specifies that this job depends on the completion of the 'build' job
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts  # Retrieves the previously uploaded build artifacts.
        uses: actions/download-artifact@v4
        with:
          name: dist-files
      - name: Output contents  # Lists the contents of the current directory (useful for debugging purposes).
        run: ls
      - name: Output filename  # Outputs the filename captured in the build step.
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: Deploy  # Placeholder for the actual deployment step (should be replaced with actual deployment commands).
        run: echo "Deploy"
